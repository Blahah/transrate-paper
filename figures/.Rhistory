install.packages(c("ggplot2", "reshape2", "plyr"))
read.csv('~/scratch/transrate_salmon/salmon_v_express.csv')
write.table(read.csv('~/scratch/transrate_salmon/salmon_v_express.csv'), '~/scratch/transrate_salmon/salmon_v_express.tsv')
write.table(read.csv('~/scratch/transrate_salmon/salmon_v_express.csv'), '~/scratch/transrate_salmon/salmon_v_express.tsv', row.names=F)
df <- read.csv('~/scratch/transrate_salmon/salmon_v_express.csv')
write.csv(df, '~/scratch/transrate_salmon/salmon_v_express.tsv')
write.csv(df, '~/scratch/transrate_salmon/salmon_v_express.tsv', row.names=F)
df
print(df)
options(digits=7)
print(df)
options(digits=10)
print(df)
print(df)
options(digits=15)
print(df)
format(df, trim=T, digits=15)
format(df, format = "fg", flag = "+"))
format(df, format = "fg", flag = "+")
setwd("~/code/transrate-paper/figures")
data_dir <- '../data'
library(ggplot2)
library(data.table)
spp <- c('mouse', 'rice', 'human', 'yeast')
assem <- c('oases', 'trinity', 'soap')
cols <- c('contig_name', 'target', 'id', 'alnlen', 'mismatches', 'gaps',
'qstart', 'qend', 'tstart', 'tend', 'evalue', 'bitscore',
'qlen', 'tlen')
load_data <- function(blast, transrate, species, assem, keepall=FALSE) {
library(dplyr)
dt <- fread(paste(data_dir, blast, sep="/"))
setnames(dt, cols)
setkey(dt, contig_name)
dt[, tcov:=alnlen/tlen]
dt[, qcov:=alnlen/qlen]
dt[, refscore:=id * tcov * qcov / 100]
dt <- group_by(dt, contig_name) %>% top_n(n=1, wt=refscore)
dt_ts <- fread(paste(data_dir, transrate, sep="/"))
setkey(dt_ts, contig_name)
dt <- merge(as.data.frame(dt_ts[,c('contig_name', 'score', 'length', 'p_good',
'p_bases_covered', 'p_seq_true',
'p_unique', 'p_not_segmented', 'eff_length',
'eff_count'),
with=FALSE]),
as.data.frame(dt[, c('contig_name', 'target', 'id', 'evalue', 'bitscore',
'tcov', 'qcov', 'refscore'),
with=FALSE]),
all.x=keepall)
dt <- as.data.table(dt)
dt[, sp:=species]
dt[, assembler:=assem]
dt[, score:=as.numeric(score)]
dt[is.na(refscore), refscore:=0]
dt[, bin:=round(score, 1)]
dt[, true:=refscore >= 0.5]
return(dt)
}
get_p_true <- function(y) {
x <- y$true
t <- length(which(x == TRUE))
f <- length(which(x == FALSE))
tot <- t + f
p_true <- t / tot
names(p_true) <- NULL
print(summary(y))
return(p_true)
}
bin_data <- function(data, species, assembler) {
## bin the scores by decile, count number of trues
library(dplyr)
n_bins <- 10
data[,true:=refscore >= 0.5]
setkey(data, score)
bins <- split(data, cut(data$score, n_bins))
binned_true <- data.table(prop_true=unlist(lapply(bins, get_p_true)),
bin=factor(1:n_bins))
binned_true[, species:=species]
binned_true[, assembler:=assembler]
return(binned_true)
}
plot_binned <- function(data) {
p <- ggplot(data, aes(x=bin, y=prop_true)) +
geom_bar(stat="identity", width=0.9, position="dodge") +
ylim(0, 1) +
facet_grid(species~assembler) +
scale_x_discrete(breaks=1:10) +
xlab("contig score decile") +
ylab("proportion matching reference transriptome") +
theme_bw()
return(p)
}
mcc <- function(FP, FN, TP, TN) {
return(
(TP * TN - FP * FN) / sqrt((TP + FP)*(TP + FN)*(TN + FP)*(TN + FN))
)
}
accuracy <- function(dt, cutoff=0.5, refcutoff=0.5) {
est <- dt$score >= cutoff
truth <- dt$refscore >= refcutoff
clas <- rep(4, length(est))
clas[est & truth] <- 1
clas[est & !truth] <- 2
clas[!est & truth] <- 3
clas <- factor(clas)
levels(clas) <- c('TP', 'FP', 'FN', 'TN')
tab <- table(clas)
FN <- as.numeric(tab[['FN']])
FP <- as.numeric(tab[['FP']])
TN <- as.numeric(tab[['TN']])
TP <- as.numeric(tab[['TP']])
P <- TP + FN
N <- FP + TN
return(list(
fn = FN,
fp = FP,
tn = TN,
tp = TP,
sensitivity = TP / P,
specificity = TN / N,
precision = TP / (TP + FP),
npv = TN / (TN + FN),
fpr = FP/ N,
fdr = FP / (FP + TP),
fnr = FN / (FN + TP),
accuracy = (TP + TN) / (P + N),
f1 = 2*TP  / (2*TP + FP + FN),
mcc = mcc(FP, FN, TP, TN)
))
}
acc_sweep <- function(dt, species, assembler) {
df <- NULL
for (cutoff in seq(0.1, 0.9, 0.02)) {
for (refcutoff in seq(0.1, 0.9, 0.1)) {
acc <- accuracy(dt, cutoff, refcutoff)
if (is.null(df)) {
df <- data.frame(cutoff, refcutoff, acc)
} else {
df <- rbind(df, data.frame(cutoff, refcutoff, acc))
}
}
}
df$species <- species
df$assembler <- assembler
df
}
plot_acc <- function(dt) {
p <- ggplot(dt, aes(x=specificity, y=sensitivity, colour=assembler, pch=species)) +
geom_point(size=10) + xlim(0, 1) + ylim(0, 1)
return(p)
}
do_cor <- function(df, species, assembler) {
res <- cor(df$score, df$refscore, method="spearman")
return(data.frame(species, assembler, cor=res))
}
# RICE
rice_trinity <- load_data(
'crbb_txome/rice/trinity/transcripts_into_Osativa_204_transcript.1.blast',
'rice/transrate/trinity/rice-trinity_Trinity.fasta_contigs.csv',
'rice', 'trinity')
rice_trinity$true <- rice_trinity$refscore >= 0.5
rice_trinity_binned <- bin_data(rice_trinity, 'rice', 'trinity')
rice_trinity_acc <- acc_sweep(rice_trinity, 'rice', 'trinity')
rice_trinity_cor <- do_cor(rice_trinity, 'rice', 'trinity')
rice_oases <- load_data(
'crbb_txome/rice/oases/transcripts_into_Osativa_204_transcript.1.blast',
'rice/transrate/oases/rice-oases_transcripts.fa_contigs.csv',
'rice', 'oases')
rice_oases_binned <- bin_data(rice_oases, 'rice', 'oases')
rice_oases_acc <- acc_sweep(rice_oases, 'rice', 'oases')
rice_oases_cor <- do_cor(rice_oases, 'rice', 'oases')
rice_soap <- load_data(
'crbb_txome/rice/soap/transcripts_into_Osativa_204_transcript.1.blast',
'rice/transrate/soapdenovotrans/rice-soapdenovotrans_soap.result.scafSeq_contigs.csv',
'rice', 'soap')
rice_soap_binned <- bin_data(rice_soap, 'rice', 'soap')
rice_soap_acc <- acc_sweep(rice_soap, 'rice', 'soap')
rice_soap_cor <- do_cor(rice_soap, 'rice', 'soap')
rice <- rbind(rice_trinity, rice_oases, rice_soap)
rice_binned <- rbind(rice_trinity_binned, rice_oases_binned, rice_soap_binned)
rice_acc <- rbind(rice_trinity_acc, rice_oases_acc, rice_soap_acc)
rice_acc_l <- melt(rice_acc, id=c('species', 'assembler', 'cutoff', 'refcutoff',
'fp', 'fn', 'tp', 'tn'))
rice_cor <- rbind(rice_trinity_cor, rice_oases_cor, rice_soap_cor)
# MOUSE
mouse_trinity <- load_data(
'crbb_txome/mouse/trinity/transcripts_into_Mus_musculus.GRCm38.cdna_all_plus_ncrna.1.blast',
'mouse/transrate/trinity/mouse-trinity_Trinity.fasta_contigs.csv',
'mouse', 'trinity')
mouse_trinity_binned <- bin_data(mouse_trinity, 'mouse', 'trinity')
mouse_trinity_acc <- acc_sweep(mouse_trinity, 'mouse', 'trinity')
mouse_trinity_cor <- do_cor(mouse_trinity, 'mouse', 'trinity')
mouse_oases <- load_data(
'crbb_txome/mouse/oases/transcripts_into_Mus_musculus.GRCm38.cdna_all_plus_ncrna.1.blast',
'mouse/transrate/oases/mouse-oases_transcripts.fa_contigs.csv',
'mouse', 'oases')
mouse_oases_binned <- bin_data(mouse_oases, 'mouse', 'oases')
mouse_oases_acc <- acc_sweep(mouse_oases, 'mouse', 'oases')
mouse_oases_cor <- do_cor(mouse_oases, 'mouse', 'oases')
mouse_soap <- load_data(
'crbb_txome/mouse/soap/transcripts_into_Mus_musculus.GRCm38.cdna_all_plus_ncrna.1.blast',
'mouse/transrate/soapdenovotrans/mouse-soapdenovotrans_soap.result.scafSeq_contigs.csv',
'mouse', 'soap')
mouse_soap_binned <- bin_data(mouse_soap, 'mouse', 'soap')
mouse_soap_acc <- acc_sweep(mouse_soap, 'mouse', 'soap')
mouse_soap_cor <- do_cor(mouse_soap, 'mouse', 'soap')
mouse <- rbind(mouse_trinity, mouse_oases, mouse_soap)
mouse_binned <- rbind(mouse_trinity_binned, mouse_oases_binned, mouse_soap_binned)
mouse_acc <- rbind(mouse_trinity_acc, mouse_oases_acc, mouse_soap_acc)
mouse_cor <- rbind(mouse_trinity_cor, mouse_oases_cor, mouse_soap_cor)
# HUMAN
human_trinity <- load_data(
'crbb_txome/human/trinity/Trinity_into_Homo_sapiens.GRCh38.cdna_all_plus_ncrna.1.blast',
'human/transrate/trinity/human-trinity_Trinity.fasta_contigs.csv',
'human', 'trinity')
human_trinity_binned <- bin_data(human_trinity, 'human', 'trinity')
human_trinity_acc <- acc_sweep(human_trinity, 'human', 'trinity')
human_trinity_cor <- do_cor(human_trinity, 'human', 'trinity')
human_oases <- load_data(
'crbb_txome/human/oases/Oases_into_Homo_sapiens.GRCh38.cdna_all_plus_ncrna.1.blast',
'human/transrate/oases/human-oases_Oases.fasta_contigs.csv',
'human', 'oases')
human_oases_binned <- bin_data(human_oases, 'human', 'oases')
human_oases_acc <- acc_sweep(human_oases, 'human', 'oases')
human_oases_cor <- do_cor(human_oases, 'human', 'oases')
human <- rbind(human_trinity, human_oases)
human_binned <- rbind(human_trinity_binned, human_oases_binned)
human_acc <- rbind(human_trinity_acc, human_oases_acc)
# YEAST
yeast_trinity <- load_data(
'crbb_txome/yeast/trinity/Trinity_into_Saccharomyces_cerevisiae.R64-1-1.cdna_all_plus_ncrna.1.blast',
'yeast/transrate/trinity/yeast-trinity_Trinity.fasta_contigs.csv',
'yeast', 'trinity')
yeast_trinity_binned <- bin_data(yeast_trinity, 'yeast', 'trinity')
yeast_trinity_acc <- acc_sweep(yeast_trinity, 'yeast', 'trinity')
yeast_oases <- load_data(
'crbb_txome/yeast/oases/Oases_into_Saccharomyces_cerevisiae.R64-1-1.cdna_all_plus_ncrna.1.blast',
'yeast/transrate/oases/yeast-oases_Oases.fasta_contigs.csv',
'yeast', 'oases')
yeast_oases_binned <- bin_data(yeast_oases, 'yeast', 'oases')
yeast_oases_acc <- acc_sweep(yeast_oases, 'yeast', 'oases')
yeast <- rbind(yeast_trinity, yeast_oases)
yeast_binned <- rbind(yeast_trinity_binned, yeast_oases_binned)
yeast_acc <- rbind(yeast_trinity_acc, yeast_oases_acc)
